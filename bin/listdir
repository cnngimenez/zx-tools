#!/usr/bin/env ruby

# Copyright 2024 Christian Gimenez
#
# listdir
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# frozen_string_literal: true

require 'zxtools/disks/mv/disk'
require 'zxtools/disks/cpm'

if ARGV.empty?
  puts 'Show directory listing from a diskette image.'
  puts
  puts 'List filenames, extensions, approximate size, attributes, last saved'
  puts 'bytes and block pointers.'
  puts
  puts 'Attributes: R = read-only, S = system file, and A = archived.'
  puts
  puts 'Synopsis:'
  puts '          listdir DISKFILE'
  exit
end

def show_entry(entry)
  r =  if entry.read_only
         "R"
       else
         "-"
       end
  s = if entry.system_file
        "S"
      else
        "-"
      end
  a = if entry.archived
        "A"
      else
        "-"
      end
  size = entry.file_size(0x400).to_s.concat("B").ljust(7)
  last = entry.last_bytes.to_s.ljust(3)
  
  print "#{entry.filename.ljust(8)}"
  print ".#{entry.extension.ljust(3)}"
  print " #{size}"
  print " #{r}#{s}#{a}"
  print " #{last} "
  entry.pointers.each do |pointer|
    print "#{pointer} "
  end
  print "\n"
end

@d = Disks::MV2::Disk.from_bin File.binread(ARGV[0])
@directory = CPM::Directory.from_bin @d.tracks[1].sectors[0].real_data
puts "name    .ext ~size   RSA last Block_Pointers"
@directory.entries.each do |entry|
  show_entry entry
end
